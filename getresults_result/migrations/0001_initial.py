# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-05-31 06:39
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield
import edc_base.model.fields.uuid_auto_field
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('getresults_order', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalRelease',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('release_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(blank=True, choices=[('release', 'Release'), ('review', 'Review')], max_length=25)),
                ('comment', models.CharField(blank=True, max_length=25, null=True)),
                ('reference', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical release',
            },
        ),
        migrations.CreateModel(
            name='HistoricalResult',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('result_identifier', models.CharField(max_length=25, null=True)),
                ('specimen_identifier', models.CharField(max_length=25, null=True)),
                ('collection_datetime', models.DateTimeField(null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('analyzer_name', models.CharField(max_length=25, null=True)),
                ('analyzer_sn', models.CharField(max_length=25, null=True)),
                ('operator', models.CharField(max_length=25, null=True)),
                ('last_exported', models.BooleanField(default=False)),
                ('last_exported_datetime', models.DateTimeField(blank=True, null=True)),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('validated', 'Validated'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('validation_datetime', models.DateTimeField(blank=True, null=True)),
                ('release_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('released', 'Released'), ('repeated', 'Repeated'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('release_datetime', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_order.Order')),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical result',
            },
        ),
        migrations.CreateModel(
            name='HistoricalResultItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('value', models.CharField(max_length=25, null=True)),
                ('raw_value', models.CharField(max_length=25, null=True)),
                ('quantifier', models.CharField(max_length=3, null=True)),
                ('result_datetime', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('accept', 'Accept'), ('repeat', 'Repeat'), ('cancel', 'Cancel'), ('ignore', 'Ignore'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('sender', models.CharField(help_text='analyzer or instrument', max_length=25, null=True)),
                ('source', models.CharField(help_text="For example, 'filename' for CSV or 'ASTM'", max_length=250, null=True)),
                ('validation_comment', models.CharField(blank=True, max_length=25, null=True)),
                ('validation_datetime', models.DateTimeField(null=True)),
                ('release_status', models.CharField(choices=[('release', 'Release'), ('review', 'Review')], max_length=10, null=True)),
                ('release_datetime', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical result item',
            },
        ),
        migrations.CreateModel(
            name='HistoricalValidate',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(db_index=True, editable=False, help_text='System field. UUID primary key.')),
                ('validate_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(max_length=25)),
                ('comment', models.CharField(blank=True, max_length=25, null=True)),
                ('reference', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
                ('released', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical validate',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('release_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(blank=True, choices=[('release', 'Release'), ('review', 'Review')], max_length=25)),
                ('comment', models.CharField(blank=True, max_length=25, null=True)),
                ('reference', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
            ],
            options={
                'db_table': 'getresults_release',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('result_identifier', models.CharField(max_length=25, null=True)),
                ('specimen_identifier', models.CharField(max_length=25, null=True)),
                ('collection_datetime', models.DateTimeField(null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('analyzer_name', models.CharField(max_length=25, null=True)),
                ('analyzer_sn', models.CharField(max_length=25, null=True)),
                ('operator', models.CharField(max_length=25, null=True)),
                ('last_exported', models.BooleanField(default=False)),
                ('last_exported_datetime', models.DateTimeField(blank=True, null=True)),
                ('validation_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('validated', 'Validated'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('validation_datetime', models.DateTimeField(blank=True, null=True)),
                ('release_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('released', 'Released'), ('repeated', 'Repeated'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('release_datetime', models.DateTimeField(blank=True, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getresults_order.Order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResultItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=25, null=True)),
                ('raw_value', models.CharField(max_length=25, null=True)),
                ('quantifier', models.CharField(max_length=3, null=True)),
                ('result_datetime', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('accept', 'Accept'), ('repeat', 'Repeat'), ('cancel', 'Cancel'), ('ignore', 'Ignore'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('sender', models.CharField(help_text='analyzer or instrument', max_length=25, null=True)),
                ('source', models.CharField(help_text="For example, 'filename' for CSV or 'ASTM'", max_length=250, null=True)),
                ('validation_comment', models.CharField(blank=True, max_length=25, null=True)),
                ('validation_datetime', models.DateTimeField(null=True)),
                ('release_status', models.CharField(choices=[('release', 'Release'), ('review', 'Review')], max_length=10, null=True)),
                ('release_datetime', models.DateTimeField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getresults_result.Result')),
                ('utestid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getresults_order.Utestid')),
            ],
            options={
                'db_table': 'getresults_resultitem',
            },
        ),
        migrations.CreateModel(
            name='Validate',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='mac2-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('validate_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(max_length=25)),
                ('comment', models.CharField(blank=True, max_length=25, null=True)),
                ('reference', models.CharField(default=uuid.uuid4, editable=False, max_length=36)),
                ('released', models.BooleanField(default=False)),
                ('release', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='getresults_result.Release')),
                ('result_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getresults_result.ResultItem')),
            ],
            options={
                'db_table': 'getresults_validate',
            },
        ),
        migrations.AddField(
            model_name='release',
            name='result',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='getresults_result.Result'),
        ),
        migrations.AddField(
            model_name='historicalvalidate',
            name='release',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_result.Release'),
        ),
        migrations.AddField(
            model_name='historicalvalidate',
            name='result_item',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_result.ResultItem'),
        ),
        migrations.AddField(
            model_name='historicalresultitem',
            name='result',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_result.Result'),
        ),
        migrations.AddField(
            model_name='historicalresultitem',
            name='utestid',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_order.Utestid'),
        ),
        migrations.AddField(
            model_name='historicalrelease',
            name='result',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='getresults_result.Result'),
        ),
        migrations.AlterUniqueTogether(
            name='resultitem',
            unique_together=set([('result', 'utestid', 'result_datetime')]),
        ),
    ]
